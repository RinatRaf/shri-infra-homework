name: Release

on:
  workflow_dispatch:

jobs:
  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [lint, test]
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install

      - if: matrix.task == 'lint'
        run: npm run lint

      - if: matrix.task == 'test'
        run: npm run test
  release:
    needs: [checks]
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3

      - name: Get release version
        id: get_version
        run: |
          echo "RELEASE_VERSION=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Create release branch
        run: |
          git checkout -b releases/${{ env.RELEASE_VERSION }}
          git push origin releases/${{ env.RELEASE_VERSION }}

      - name: Log in to Container Registry
        run: echo "${{ secrets.YANDEX_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex

      - name: Build and push Docker
        run: |
          echo docker build -t cr.yandex/${{ vars.CR_ID }}/app:${{ env.RELEASE_VERSION }} -t cr.yandex/${{ vars.CR_ID }}/app:${{ env.RELEASE_VERSION }}_latest .
          echo docker push cr.yandex/${{ vars.CR_ID }}/app --all-tags

      - name: Configure Git
        run: |
          git config --global user.email "rinat.rafikov5@yandex.ru"
          git config --global user.name "rinatRafikov"

      - name: Add tag and push
        run: |
          git tag -a v${{ env.RELEASE_VERSION }} -m "release ${{ env.RELEASE_VERSION }}"
          git push origin v${{ env.RELEASE_VERSION }} --tags

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get previous tag commits
        id: get_commit_list
        run: |
          tag_name="v${{ github.run_number }}"
          echo tag_name $tag_name
          prev_tag=$(git describe --tags --abbrev=0 HEAD^)
          echo prev_tag $prev_tag
          commits=$(git log --pretty=format:'%h%x09%an%x09%ad%x09%s' $prev_tag..$tag_name)
          echo commits
          echo "COMMITS=$(git log --pretty=format:'%h%x09%an%x09%ad%x09%s' $prev_tag..$tag_name)" >> $GITHUB_ENV

      - name: Set date as env variable
        run: echo "NOW=$(date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV

      - name: Create issue
        uses: dacbd/create-issue-action@main
        with:
          token: ${{ github.token }}
          labels: release
          title: Release ${{github.run_number}}
          body: |
            - Date: ${{env.NOW}}
            - Author: ${{ github.triggering_actor }}
            - Version: ${{ github.run_number }}
            - Commits: ${{ env.COMMITS }}
            - YC Docker: cr.yandex/${{ vars.CR_ID }}/app:${{ github.run_number }}
