name: Release

on:
  workflow_dispatch:

jobs:
  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        task: [lint, test]
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - run: npm install

      - if: matrix.task == 'lint'
        run: npm run lint

      - if: matrix.task == 'test'
        run: npm run test
  release:
    needs: checks
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4

      - name: Get release version
        run: |
          echo "RELEASE_VERSION=${{ github.run_number }}" >> $GITHUB_ENV

      - name: Push release branch
        run: |
          git checkout -b release/${{ env.RELEASE_VERSION }}
          git push origin release/${{ env.RELEASE_VERSION }}

      - name: Login to Yandex registry
        run: |
          echo "${{ secrets.YANDEX_TOKEN }}" | docker login --username oauth --password-stdin cr.yandex

      - name: Build and push Docker
        run: |
          docker build -t cr.yandex/${{ vars.CR_ID }}/app:${{ env.RELEASE_VERSION }} -t cr.yandex/${{ vars.CR_ID }}/app:${{ env.RELEASE_VERSION }}_latest .
          docker push cr.yandex/${{ vars.CR_ID }}/app --all-tags

      - name: Add tag and push
        run: |
          git tag v${{ env.RELEASE_VERSION }}
          git push origin v${{ env.RELEASE_VERSION }}

      - name: Set git config
        run: |
          git config --global user.email "rinat.rafikov5@yandex.ru"
          git config --global user.name "rinat.rafikov"

      - name: Get previous tag
        run: |
          git fetch
          git branch --set-upstream-to origin/releases/${{ env.RELEASE_VERSION }}
          PREV_TAG=$( git ls-remote --tags origin | tail -2 | head -1 | sed 's/.*\///')
          echo "COMMITS=$(git log ${{ env.PREV_TAG }}..v${{ env.RELEASE_VERSION }} --pretty=format:"%h - %an, %ar : %s")" >> $GITHUB_ENV

      - name: Create issue
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
